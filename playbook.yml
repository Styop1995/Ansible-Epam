---

- name: "Wordpress configuration with ansible"
  hosts: local
  vars_files:
    - template/vars.yaml
  tasks: 
    - name: "Install packages"
      become: true
      apt:
        name: 
          - nginx
          - mariadb-server
          - mariadb-client
          - php-fpm
          - php-mysql
        update_cache: true
        state: present
    - name: "start mariadb"
      action: 'service name=mariadb state=started'
    - name: 'set root password'
      mysql_user:
        name: '{{ mysql_root_user }}'
        password: '{{ mysql_root_password }}'
        priv: '*.*:ALL,GRANT'
        login_unix_socket: '{{ mysql_socket }}'
      become: true

    - name: 'create mariadb db'
      mysql_db:
        name: '{{ db_name }}'
        state: present
        login_user: '{{ mysql_root_user }}'
        login_password: '{{mysql_root_password}}'
        login_unix_socket: '{{ mysql_socket }}'
      become: true

    - name: 'create mariadb user'
      become: true
      mysql_user:
        name: '{{ db_user }}'
        password: '{{ db_user_pass }}'
        priv: '*.*:ALL'
        login_user: '{{ mysql_root_user }}'
        login_password: '{{mysql_root_password}}'
        login_unix_socket: '{{ mysql_socket }}'


    - name: 'send site config file'
      copy:
        src:  '{{ wordpress_config_path }}'
        dest: '{{ nginx_sites_available }}'
      become: yes
    - name: 'Some changes on file'
      replace: 
        path: '{{ nginx_sites_available }}'
        regexp: '127.0.0.1'
        replace: "{{ ansible_host }}"
      become: yes
    - name: 'remove default config'
      file:
        path: '{{ nginx_default_path }}'
        state: absent
      become: yes
    - name: 'create simlink'
      become: yes
      file:
        src: '{{ nginx_sites_available }}'
        dest: '{{ nginx_sites_enabled }}'
        state: link
    - name: 'restart nginx service and enable it on startup'
      become: yes
      service: 
        name: nginx
        state: restarted
        enabled: true
    - name: 'Wordpress file check_path'
      stat: path=/var/www/wordpress
      register: check_path
    - name: 'Download wordpress files'
      get_url:
        url: '{{ wordpress_remote_site_path  }}'
        dest: '{{  wordpress_local_site_path }}'
      when: not check_path.stat.exists
    - name: 'Extract files to folder'
      unarchive:
        src: '{{  wordpress_local_site_path }}'
        dest: '{{ nginx_www }}'
        remote_src: yes
      become: yes
      when: not check_path.stat.exists
    - name: 'Give wordpress wordpress file www-data owner'
      file:
        path: /var/www/wordpress
        owner: www-data
        group: www-data
      become: yes
